<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=gb2312">
  <title>乡下小老鼠日常笔记</title>
  <link href="TryDoxygen.css" rel="stylesheet" type="text/css">
  <meta name="robots" content="index,nofollow">
</head>
<table width="100%" bgColor="#99CCFF">
<tr align=left>
	<td align=left height=46 class="style1"><a href="index.html">
<img class="logo" src="logo.png" height="46" alt="" 
            style="background-color: #99CCFF; background-image: none;" /></a></td> <td align=center>
        <font size=6 color="#FFFFFF" face=""><b>乡下小老鼠日常笔记</b></font>
	</td><td align=left height=46 class="style1">
<img class="space" src="space.png" height="46" alt="" 
            style="background-color: #99CCFF; background-image: none;" /></td>
</tr> </table>
<!-- 制作者 Doxygen 1.8.15 -->
</div><!-- top -->
<div class="PageDoc"><div class="header">
  <div class="headertitle">
<div class="title">生产环境下Centos 6.5优化配置 </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="section author"><dt>作者</dt><dd>from web [<a href="http://blog.csdn.net/houdaiye/article/details/52161408">http://blog.csdn.net/houdaiye/article/details/52161408</a>] <hr/>
 </dd></dl>
<h1><a class="anchor" id="opt_items"></a>
centos 6.5 优化 的项有18处:</h1>
<ul>
<li>centos6.5最小化安装后启动网卡</li>
<li>ifconfig查询IP进行SSH链接</li>
<li>更新系统源并且升级系统</li>
<li>系统时间更新和设定定时任</li>
<li>修改ip地址、网关、主机名、DNS</li>
<li>关闭selinux，清空iptables</li>
<li>创建普通用户并进行sudo授权管理</li>
<li>修改SSH端口号和屏蔽root账号远程登陆</li>
<li>锁定关键文件系统（禁止非授权用户获得权限）</li>
<li>精简开机自启动服务</li>
<li>调整系统文件描述符大小</li>
<li>设置系统字符集</li>
<li>清理登陆的时候显示的系统及内核版本</li>
<li>内核参数优化</li>
<li>定时清理/var/spool/clientmqueue</li>
<li>删除不必要的系统用户和群组</li>
<li>关闭重启ctl-alt-delete组合键</li>
<li>设置一些全局变量 </li>
</ul>
<h2><a class="anchor" id="enableweca"></a>
启动网卡</h2>
<pre class="fragment"># centos6.x最小化安装后，网卡默认不是启动状态
ifup eth0
</pre> <h2><a class="anchor" id="sshlnk"></a>
SSH链接 ifconfig 查看IP后SSH终端连接。</h2>
<h2><a class="anchor" id="updsfhaf"></a>
更新源</h2>
<ul>
<li>最小化安装是没有wget工具的，必须先安装在修改源) <pre class="fragment">yum install wget
</pre></li>
<li>备份原系统更新源 <pre class="fragment">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
# 进入yum.repos.d目录
cd /etc/yum.repos.d
# 下载网易镜像源或者搜狐镜像源
wget http://mirrors.163.com/.help/CentOS6-Base-163.repo
# or
# 下载搜狐镜像源：
wget http://mirrors.sohu.com/help/CentOS-Base-sohu.repo

网易搜狐的源可能有问题。
 参考http://blog.csdn.net/ichsonx/article/details/8518420
清空yum缓存
yum clean all
生存缓存
yum makecache
开始更新系统以及内核
yum upgrade
必备软件
yum install ntpdate -y
</pre> </li>
</ul>
<h2><a class="anchor" id="udtaahgad"></a>
系统时间更新和设定定时任务</h2>
<ul>
<li>方法1：更新时间并且写入BOIS <pre class="fragment">ntpdate time.windows.com &amp;&amp; hwclock -w &amp;&amp; hwclock --systohc
# 或者：查看时间服务器的时间:
rdate time-b.nist.gov
# 设置时间和时间服务器同步:
rdate -s time-b.nist.gov
</pre></li>
<li>方法二：更新时间并且写入定时任务 <pre class="fragment">echo '*/30 * * * * ntpdate time.windows.com &amp;&amp; hwclock -w &amp;&amp; hwclock --systohc &gt;/dev/null 2&gt;&amp;1' &gt;&gt;/var/spool/cron/root
</pre></li>
<li>方法三：每间隔5分钟和10分钟同步一次时间 <pre class="fragment">echo '*/5 * * * * /usr/sbin/ntpdate time.windows.com &gt;/dev/null 2 &gt;&amp;1' &gt;&gt;/var/spool/cron/root
echo '*/10 * * * * /usr/sbin/ntpdate time.nist.gov &gt;/dev/null 2&gt;&amp;1' &gt;&gt;/var/spool/cron/root
提示：CentOS 6.x的时间同步命令路径不一样 6是/usr/sbin/ntpdate 5是/sbin/ntpdate
</pre> </li>
</ul>
<h2><a class="anchor" id="jfasjaun"></a>
修改ip地址、网关、主机名、DNS #eth0</h2>
<ul>
<li>网卡设置 <pre class="fragment">mv /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0.bak
vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0 \#网卡设备名称
HWADDR=00:0C:29:D0:C7:B5 \#以太网设备的对应的物理地址
TYPE=Ethernet \#网络类型为以太网模式
UUID=080a457b-6a53-4a3a-9155-a23c1146c2c6 \#通用唯一识别码
ONBOOT=yes \#是否启动引导的时候激活YES
NM_CONTROLLED=no \#设备eth0是否可以由Network Manager图形管理工具托管
BOOTPROTO=dhcp \#静态IP地址获取状态 如：DHCP表示自动获取IP地址
IPADDR=192.168.1.10 #IP
IPV6INIT=no
IPV6_AUTOCONF=no
NETMASK=255.255.255.0 \#网卡对应的网络掩码
GATEWAY=192.168.1.1 \#网关地址
</pre> 检查网卡配置 cat /etc/sysconfig/network-scripts/ifcfg-eth0</li>
<li>网关配置 <pre class="fragment">vi /etc/sysconfig/network
\# 表示系统是否使用网络，一般设置为yes。如果设为no，则不能使用网络，而且很多系统服务程序将无法启动
NETWORKING=yes
\# 设置本机的主机名，这里设置的主机名要和/etc/hosts中设置的主机名对应
HOSTNAME=c65mini.localdomain
\# 设置本机连接的网关的IP地址。例如，网关为10.0.0.1或者192.168.1.1
GATEWAY=192.168.1.1
</pre></li>
<li>修改主机DNS <pre class="fragment">vi /etc/resolv.conf
; generated by /sbin/dhclient-script
nameserver 8.8.8.8
nameserver 4.4.4.4
</pre></li>
<li>修改HOSTS <pre class="fragment">vi /etc/hosts
127.0.0.1 lvtao.localdomain
# 使用DNS域名服务器来解析名字
order bind hosts
# 一台主机是否存在多个IP
multi on
# 如果用逆向解析找出与指定的地址匹配的主机名，对返回的地址进行解析以确认它确实与您查询的地址相配。为了防止“骗取”IP地址
nospoof on
</pre></li>
<li>重启网卡生效设置两种方法 <pre class="fragment">service network restart
或者
/etc/init.d/network restart
</pre> </li>
</ul>
<h2><a class="anchor" id="shufsdfnc"></a>
关闭selinux，清空iptables 在服务器配置完全成功后各项服务正常后，在开启selinux</h2>
<p>查看selinux状态</p><ul>
<li>方法1：/usr/bin/setstatus -v #如果显示：SELinux status: enabled 就是开启状态</li>
<li>方法2：cat /etc/selinux/config #如果显示：SELINUX=enforcing 则是开启状态permissive有提醒的状态 disabled是关闭</li>
<li>方法3：grep SELINUX=disabled /etc/selinux/config</li>
<li>方法4：getenforce 修改selinux状态 如果修改配置文件则永久生效，但是必须要重启系统</li>
<li>第一种：vi /etc/selinux/config 修改 SELINUX=disabled</li>
<li>第二种：sed –i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/config 如果想立即生效（如果想临时性的改变） setenforce 0 setenforce 1 设置SELinux 成为enforcing模式 setenforce 0 设置SELinux 成为permissive模式 查看状态 getenforce iptables防火墙规则清理了，根据需求定制 <pre class="fragment"># 清空iptables规则
iptables -F
# 查看iptables规则
iptables -L
# 保存规则，注意，虽然清空了，不保存的话，重启后，又会有规则。
/etc/init.d/iptables save
</pre> </li>
</ul>
<h2><a class="anchor" id="crafajdjfs"></a>
创建普通用户并进行sudo授权管理</h2>
<p>创建普通用户 useradd lvtao 修改用户密码 passwd lvtao ，另一种方式：一次性创建用户和设置密码 echo "123456"|passwd &ndash;stdin lvtao&amp;&amp;history –c 。其中lvtao为你创建的用户名，sudo授权管理【略】 </p>
<h2><a class="anchor" id="fhsdjkhfakj"></a>
修改SSH端口号和屏蔽root账号远程登陆</h2>
<pre class="fragment">#备份SSH配置
cp /etc/ssh/sshd_config sshd_config_bak
#修改SSH安全配置
vi /etc/ssh/sshd_config
#SSH链接默认端口
port 52113
#禁止root账号登陆
PermitRootLogin no
#禁止空密码
PermitEmptyPasswords no
#不使用DNS
UseDNS no
</pre> <h2><a class="anchor" id="fdsjfdal"></a>
重新载入SSH配置</h2>
<p>/etc/init.d/sshd reload 查看端口里面是否有刚才修改过的端口号52113 netstat -lnt</p>
<p>或者反查端口是那个进程 lsof -i tcp:52113</p>
<p>centos6.5最小化安装没有lsof工具需要 yum install lsof </p>
<h2><a class="anchor" id="锁定关键文件系统（禁止非授权用户获得权限）"></a>
锁定关键文件系统（禁止非授权用户获得权限）</h2>
<pre class="fragment">chattr +i /etc/passwd
chattr +i /etc/inittab
chattr +i /etc/group
chattr +i /etc/shadow
chattr +i /etc/gshadow
</pre> <h2><a class="anchor" id="精简开机自启动服务"></a>
精简开机自启动服务</h2>
<p>刚装完操作系统一般可以只保留crond，network，syslog，sshd这四个服务。 后期根据业务需求制定自启服务 #（Centos6.x为rsyslog Cetnos5.x为syslog） 如果是中文的话。可能会需要LANG=en 或者替换 3:on 成 3:启用 </p><pre class="fragment">#关闭全部服务
for sun in `chkconfig --list|grep 3:on|awk '{print $1}'`;do chkconfig --level 3 $sun off;done
#或者
for sun in `chkconfig --list|grep 3:启用|awk '{print $1}'`;do chkconfig --level 3 $sun off;done

#开启需要的服务
for sun in crond rsyslog sshd network;do chkconfig --level 3 $sun on;done

#或者需要使用防火墙的话可以开启iptables和ip6tables
for sun in crond rsyslog sshd network iptables ip6tables;do chkconfig --level 3 $sun on;done

查询下开启的服务 chkconfig –list | grep 3:on 或者 chkconfig –list|grep 3:启用
[bingoku@c65mini ~]$ chkconfig --list|grep 3:启用
crond           0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
ip6tables       0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
iptables        0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
network         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
rsyslog         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
sshd            0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
</pre> <h2><a class="anchor" id="adjksdf"></a>
调整文件描述符大小</h2>
<pre class="fragment">#查看文件描述符大小
ulimit -n

第一种：#这里参考的是阿里云主机默认设置。
vi /etc/security/limits.conf
* soft nofile 65535
* hard nofile 65535
* soft nproc 65535
* hard nproc 65535
* soft nofile 65535
* hard nofile 65535

第二种：echo '* - nofile 65535' &gt;&gt; /etc/security/limits.conf
第三种：把ulimit -SHn 65535命令加入到/etc/rc.local，然后每次重启生效 追加命令到rc.local配置文件里面
cat &gt;&gt;/etc/rc.local&lt;&lt;EOF
#open files
ulimit -HSn 65535
#stack size
ulimit -s 65535
EOF

第四种：如果不修改limits配置文件，直接立即生效，但重启后又恢复之前的默认。 ulimit -SHn 65535
</pre> <h2><a class="anchor" id="hfjsad"></a>
设置系统字符集</h2>
<ul>
<li>第一种：vi /etc/sysconfig/i18n 如果想用中文提示：LANG=”zh_CN.UTF-8″ 如果想用英文提示：LANG=”en_US.UTF-8″ 如果临时切换也可以 LANG=zh_CN.UTF-8</li>
<li>第二种：使用sed快速替换 <pre class="fragment">#替换成英文
sed -i 's#LANG="zh_CN.*"#LANG="en_US.UTF-8"#' /etc/sysconfig/i18n
#替换成中文
sed -i 's#LANG="en_US.*"#LANG="zh_CN.UTF-8"#' /etc/sysconfig/i18n
#替换成UTF-8中文
sed -i 's#LANG="zh_CN.*"#LANG="zh_CN.UTF-8"#' /etc/sysconfig/i18n
</pre> </li>
</ul>
<h2><a class="anchor" id="dkajuicn"></a>
清理登陆的时候显示的系统及内核版本</h2>
<pre class="fragment">#查看登陆信息
cat /etc/redhat-release cat /etc/issue
#清理登陆信息
echo &gt;/etc/redhat-release
echo &gt;/etc/issue
</pre> <h2><a class="anchor" id="kernaskf"></a>
内核参数优化 vi /etc/sysctl.conf</h2>
<pre class="fragment">#可用于apache，nginx，squid多种等web应用
net.ipv4.tcp_max_syn_backlog = 65536
net.core.netdev_max_backlog = 32768
net.core.somaxconn = 32768

net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 2

net.ipv4.tcp_tw_recycle = 1
#net.ipv4.tcp_tw_len = 1
net.ipv4.tcp_tw_reuse = 1

net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_max_orphans = 3276800

#net.ipv4.tcp_fin_timeout = 30
#net.ipv4.tcp_keepalive_time = 120
net.ipv4.ip_local_port_range = 1024 65535

#以下参数是对centos6.x的iptables防火墙的优化，防火墙不开会有提示，可以忽略不理。
#如果是centos5.X需要吧netfilter.nf_conntrack替换成ipv4.netfilter.ip
#centos5.X为net.ipv4.ip_conntrack_max = 25000000
net.nf_conntrack_max = 25000000
net.netfilter.nf_conntrack_max = 25000000
net.netfilter.nf_conntrack_tcp_timeout_established = 180
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120
</pre><p> 立即生效 /sbin/sysctl -p centos6.5可能会报错 </p><pre class="fragment">error: "net.bridge.bridge-nf-call-ip6tables" is an unknown key
error: "net.bridge.bridge-nf-call-iptables" is an unknown key
error: "net.bridge.bridge-nf-call-arptables" is an unknown key
</pre><p> 出现这个的原因是，没有自动载入bridge桥接模块 </p><pre class="fragment">modprobe bridge
echo "modprobe bridge"&gt;&gt; /etc/rc.local
</pre><p> 查看桥接 lsmod|grep bridge,centos5.X可能会报错 这个错误可能是你的防火墙没有开启或者自动处理可载入的模块ip_conntrack没有自动载入，解决办法有二，一是开启防火墙，二是自动处理开载入的模块ip_conntrack </p><pre class="fragment">error: "net.ipv4.ip_conntrack_max"is an unknown key
error: "net.ipv4.netfilter.ip_conntrack_max"is an unknown key
error: "net.ipv4.netfilter.ip_conntrack_tcp_timeout_established"is an unknown key
error: "net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait"is an unknown key
error: "net.ipv4.netfilter.ip_conntrack_tcp_timeout_close_wait"is an unknown key
error: "net.ipv4.netfilter.ip_conntrack_tcp_timeout_fin_wait"is an unknown key
</pre><p> centos5.X解决方法： </p><pre class="fragment">modprobe ip_conntrack
echo "modprobe ip_conntrack"&gt;&gt; /etc/rc.local
</pre><p> centos6.X可能会报错 这个错误可能是你的防火墙没有开启或者自动处理可载入的模块ip_conntrack没有自动载入，解决办法有二，一是开启防火墙，二是自动处理开载入的模块ip_conntrack </p><pre class="fragment">error: "net.nf_conntrack_max"isan unknown key
error: "net.netfilter.nf_conntrack_max"isan unknown key
error: "net.netfilter.nf_conntrack_tcp_timeout_established"isan unknown key
error: "net.netfilter.nf_conntrack_tcp_timeout_time_wait"isan unknown key
error: "net.netfilter.nf_conntrack_tcp_timeout_close_wait"isan unknown key
error: "net.netfilter.nf_conntrack_tcp_timeout_fin_wait"isan unknown key
</pre><p> centos6.X解决方法： </p><pre class="fragment">modprobe nf_conntrack
echo "modprobe nf_conntrack"&gt;&gt; /etc/rc.local
</pre> <dl class="section attention"><dt>注意</dt><dd>笔者在整理这篇centos6.5内核优化的时候发现，如果不开启ip6tables去优化nf_conntrack模块去执行上面的解决方法会依旧提示上面的error。所以在优化服务的时候，可以选择留下iptables和ip6tables。当然如果不用iptables的话，在内核优化的时候就要去掉对nf_conntrack的设置，在进行/sbin/sysctl -p 是不会有错误提示的。 </dd></dl>
<h2><a class="anchor" id="jidsmaolog"></a>
如果安装sendmail必须定时自动清理/var/spool/clientmqueue/下文件防止inode节点被占满</h2>
<pre class="fragment">#centos6.5已经不自动安装sendmail了所以没必要走这一步优化
mkdir -p /server/scripts
vi /server/scripts/spool_clean.sh
#!/bin/sh
find/var/spool/clientmqueue/-typef -mtime +30|xargsrm-f
</pre> <h2><a class="anchor" id="dellfaangas"></a>
删除不必要的系统用户和群组</h2>
<pre class="fragment">#删除不必要的用户
userdel adm
userdel lp
userdel sync
userdel shutdown
userdel halt
userdel news
userdel uucp
userdel operator
userdel games
userdel gopher
userdel ftp
#删除不必要的群组
groupdel adm
groupdel lp
groupdel news
groupdel uucp
groupdel games
groupdel dip
groupdel pppusers
</pre> <h2><a class="anchor" id="sfasufdsalt"></a>
关闭重启ctl-alt-delete组合键</h2>
<pre class="fragment">vi /etc/init/control-alt-delete.conf
#注释掉
#exec /sbin/shutdown -r now "Control-Alt-Deletepressed"
</pre> <h2><a class="anchor" id="glofbakds"></a>
设置一些全局变量</h2>
<pre class="fragment">#设置自动退出终端，防止非法关闭ssh客户端造成登录进程过多，可以设置大一些，单位为秒
echo "TMOUT=3600"&gt;&gt; /etc/profile
#历史命令记录数量设置为10条
sed -i "s/HISTSIZE=1000/HISTSIZE=10/" /etc/profile
#立即生效
source /etc/profile
</pre> </div></div><!-- PageDoc -->
</div><!-- contents -->
<hr>
<MARQUEE behavior="alternate">乡下小老鼠倾力打造 &reg</MARQUEE>
</html>
